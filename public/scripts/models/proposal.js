// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["backbone"], function(Backbone) {
    "use strict";
    var Proposal, _ref;
    Proposal = (function(_super) {
      __extends(Proposal, _super);

      function Proposal() {
        _ref = Proposal.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Proposal.prototype.url = function() {
        if (this.get("id")) {
          return "/proposals/" + (this.get("id"));
        } else {
          return "/proposals";
        }
      };

      Proposal.prototype.voting_time_to_human = function() {
        var left;
        left = Math.round(new Date(this.get('finished_at')) - new Date(this.get('started_at'))) / 1000;
        if (left <= 3600) {
          return "" + (left / 60) + " minutes left";
        } else if (left <= 86400) {
          return "" + (left / 3600) + " hours left";
        } else {
          return "" + (left / 86400) + " days left";
        }
      };

      return Proposal;

    })(Backbone.Model);
    return Proposal;
  });

}).call(this);
