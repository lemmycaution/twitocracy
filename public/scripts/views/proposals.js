// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["jquery", "underscore", "backbone", "models/proposal", "collections/proposals", "views/proposal", "/scripts/vendor/jquery.insert_at.js"], function($, _, Backbone, Proposal, Proposals, ProposalView) {
    "use strict";
    var ProposalsView, _ref;
    ProposalsView = (function(_super) {
      __extends(ProposalsView, _super);

      function ProposalsView() {
        this.renderPagination = __bind(this.renderPagination, this);
        _ref = ProposalsView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      ProposalsView.prototype.el = "ul.collection";

      ProposalsView.prototype.initialize = function(options) {
        var _this = this;
        this.collection = new Proposals;
        this.collection.on("add", this.addProposal, this);
        this.collection.fetch({
          data: _.compact(options.data),
          success: this.renderPagination
        });
        this.channel = app.pusher.subscribe("proposals");
        this.channel.bind('create', function(data) {
          return _this.collection.add(data, {
            at: 0
          });
        });
        return this;
      };

      ProposalsView.prototype.addProposal = function(proposal) {
        var view;
        view = new ProposalView({
          model: proposal
        });
        return this.$el.insertAt(this.collection.indexOf(proposal), view.render().el);
      };

      ProposalsView.prototype.renderPagination = function() {
        var scope, template;
        if (this.collection.pagination.total > 1) {
          scope = "";
          if (this.options.data.scope) {
            scope = "/scope/" + this.options.data.scope;
          }
          template = "<ul class=\"pagination\">\n<% for(var i = 1; i < total+1; i++) { %>\n<% if (i == page) { %>\n<li><a class=\"current\"><%= i %></a></li>      \n<% } else { %>\n<li><a href=\"" + scope + "/page/<%= i %>\"><%= i %></a></li>            \n<% } %>  \n<% } %>  \n</ul>";
          $(_.template(template, this.collection.pagination)).insertAfter(this.$el);
        }
        return this;
      };

      return ProposalsView;

    })(Backbone.View);
    return ProposalsView;
  });

}).call(this);
