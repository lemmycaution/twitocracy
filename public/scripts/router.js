// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["jquery", "underscore", "backbone", "models/proposal", "collections/proposals", "views/proposal", "views/proposals"], function($, _, Backbone, Proposal, Proposals, ProposalView, ProposalsView) {
    "use strict";
    var Router, _ref;
    Router = (function(_super) {
      __extends(Router, _super);

      function Router() {
        _ref = Router.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Router.prototype.routes = {
        "(scope/:scope)(page/:page)": "index",
        "scope/:scope(/page/:page)": "index",
        "new": "new",
        ":id": "show"
      };

      Router.prototype.index = function(scope, page) {
        return app.view = new ProposalsView({
          data: {
            scope: scope,
            page: page
          }
        });
      };

      Router.prototype["new"] = function() {
        var inputs,
          _this = this;
        inputs = "#proposal_up_tweet, #proposal_down_tweet, #proposal_owner_vote_up, #proposal_owner_vote_down";
        $("#proposal_downvoting_enabled").on("change", function(e) {
          $(e.currentTarget).val($(e.currentTarget).is(":checked"));
          if ($(e.currentTarget).is(":checked")) {
            return $(inputs).removeAttr("disabled").parents("p").show();
          } else {
            return $(inputs).attr("disabled", true).parents("p").hide();
          }
        });
        $("textarea, input").on("change", function(e) {
          var $e;
          $e = $(e.currentTarget);
          if ($e.hasClass("error")) {
            return $e.removeClass("error").parent("p").find("small").remove();
          }
        });
        return $("#new_proposal").on("submit", function(e) {
          var $e, data, proposals;
          e.preventDefault();
          $e = $(e.currentTarget);
          app.set_button_state($e.find("button")[0]);
          data = _.serializeForm(e.currentTarget);
          $(".error_container").remove();
          proposals = new Proposals;
          return proposals.create(data, {
            success: function(model) {
              return window.location.href = "/" + (model.get("id"));
            },
            error: function(model, xhr) {
              var error, errors, _results;
              app.set_button_state($e.find("button")[0], false);
              errors = JSON.parse(xhr.responseText);
              $(".error_container").remove();
              _results = [];
              for (error in errors) {
                _results.push($("<small class=\"error_container\"><br/>" + (errors[error].join(",")) + "</small>").insertAfter($("#proposal_" + error).addClass("error")));
              }
              return _results;
            }
          });
        });
      };

      Router.prototype.show = function(id) {
        return app.view = new ProposalView({
          id: id,
          add: true
        });
      };

      return Router;

    })(Backbone.Router);
    return Router;
  });

}).call(this);
